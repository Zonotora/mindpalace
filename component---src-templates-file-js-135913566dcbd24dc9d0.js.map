{"version":3,"sources":["webpack:///./src/templates/file.js"],"names":["TreeHeader","className","name","link","section","children","setPosX","isTabletOrMobile","href","onClick","e","trim","length","ContentTree","header","style","posX","display","justifyContent","flex","width","position","left","onListClick","onTreeViewClick","Slider","onMouseUp","document","removeEventListener","onMouseMove","preventDefault","pageX","window","innerWidth","onMouseDown","button","addEventListener","Template","data","useState","setHeader","markdownRemark","frontmatter","html","useMediaQuery","query","useEffect","generateTree","depth","sectionText","elements","text","root","shift","isRoot","unshift","push","key","isLast","JSON","parse","stringify","siteTitle","title","parent","slug","substring","lastIndexOf","dangerouslySetInnerHTML","__html","height"],"mappings":"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","file":"component---src-templates-file-js-135913566dcbd24dc9d0.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Layout from \"components/Layout\";\nimport { FileHeader } from \"components/Header\";\nimport Searchfield from \"../components/Searchfield\";\nimport \"katex/dist/katex.min.css\";\nimport \"./template.css\";\nimport \"./syntax.css\";\nimport { ListButton } from \"../components/Button\";\n\nconst generateTree = (\n  header,\n  setPosX,\n  isTabletOrMobile = false,\n  depth = 1,\n  sectionText = \"\"\n) => {\n  const elements = [];\n  const text = depth !== 1 ? `${sectionText}.` : \"\";\n  let section = 1;\n\n  while (header.length > 0) {\n    const root = header.shift();\n    const isRoot = root.depth === 1 ? \"root\" : \"\";\n\n    // check if current node has a depth which is lesser than current recursion\n    // if that is the case return recursion up to current depth\n    if (root.depth < depth) {\n      header.unshift(root);\n      return elements;\n    }\n\n    // if there are no items left check if it is root (depth==1)\n    if (header.length === 0) {\n      elements.push(\n        <TreeHeader\n          key={root.link}\n          className={`last ${isRoot}`}\n          name={root.name}\n          link={root.link}\n          section={`${text}${section}`}\n          setPosX={setPosX}\n          isTabletOrMobile={isTabletOrMobile}\n        />\n      );\n    }\n    // if next item has a greater depth, generate children nodes\n    else if (header[0].depth > root.depth) {\n      const children = generateTree(\n        header,\n        setPosX,\n        isTabletOrMobile,\n        header[0].depth,\n        `${text}${section}`\n      );\n      const isLast =\n        header.length > 0 && header[0].depth < root.depth ? \"last\" : \"\";\n\n      elements.push(\n        <TreeHeader\n          key={root.link}\n          className={`${isLast} ${isRoot}`}\n          name={root.name}\n          link={root.link}\n          section={`${text}${section}`}\n          children={children}\n          setPosX={setPosX}\n          isTabletOrMobile={isTabletOrMobile}\n        />\n      );\n    }\n    // if next item is equal to current item in depth, add current item (root) to elements\n    else if (header[0].depth === root.depth) {\n      elements.push(\n        <TreeHeader\n          key={root.link}\n          className={isRoot}\n          name={root.name}\n          link={root.link}\n          section={`${text}${section}`}\n          setPosX={setPosX}\n          isTabletOrMobile={isTabletOrMobile}\n        />\n      );\n    }\n    // if next item has a lesser depth, add current item (root) and return elements\n    // because we have reached the end of depth for this node\n    else {\n      elements.push(\n        <TreeHeader\n          key={root.link}\n          className=\"last\"\n          name={root.name}\n          link={root.link}\n          section={`${text}${section}`}\n          setPosX={setPosX}\n          isTabletOrMobile={isTabletOrMobile}\n        />\n      );\n      return elements;\n    }\n    section += 1;\n  }\n  return elements;\n};\n\nconst TreeHeader = ({\n  className = \"\",\n  name,\n  link,\n  section,\n  children = [],\n  setPosX,\n  isTabletOrMobile = false,\n}) => (\n  <li>\n    <a\n      href={`#${link}`}\n      onClick={(e) => {\n        if (isTabletOrMobile) {\n          setPosX(0);\n        }\n      }}\n    >\n      <span className={`node ${className}`.trim()}>\n        <div className=\"node-bar\" />\n        <div className=\"visibility-box\">\n          <p>{section}</p>\n        </div>\n        <div className=\"status\"> </div>\n        <p>{name}</p>\n      </span>\n    </a>\n    {children.length > 0 ? <ul>{children}</ul> : <></>}\n  </li>\n);\n\nconst ContentTree = ({ header, style, posX, setPosX }) => (\n  <>\n    <div className=\"content-tree\" style={style}>\n      <div\n        style={{\n          display: `${posX >= 95 ? \"flex\" : \"\"}`,\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <Searchfield className=\"file\" style={{ flex: \"1 1 auto\" }} />\n        {posX >= 95 ? (\n          <ListButton\n            style={{\n              width: \"30px\",\n              position: \"relative\",\n              left: \"0px\",\n            }}\n            onListClick={(e) => onTreeViewClick(e, posX, setPosX, false)}\n          />\n        ) : (\n          <></>\n        )}\n      </div>\n\n      <div className=\"content-tree-container\">\n        <ul className=\"content-ul\">{header}</ul>\n      </div>\n    </div>\n  </>\n);\n\nconst Slider = ({ setPosX, style }) => {\n  const onMouseUp = (e) => {\n    document.removeEventListener(\"mouseup\", onMouseUp);\n    document.removeEventListener(\"mousemove\", onMouseMove);\n  };\n\n  const onMouseDown = (e) => {\n    if (e.button === 0) {\n      e.preventDefault();\n      document.addEventListener(\"mouseup\", onMouseUp);\n      document.addEventListener(\"mousemove\", onMouseMove);\n    }\n  };\n\n  const onMouseMove = (e) => {\n    e.preventDefault();\n    setPosX((e.pageX / window.innerWidth) * 100);\n  };\n\n  return <div className=\"slider\" onMouseDown={onMouseDown} style={style} />;\n};\n\nconst onTreeViewClick = (e, posX, setPosX, isTabletOrMobile) => {\n  if (posX < 5) {\n    setPosX(isTabletOrMobile ? 100 : 25);\n  } else {\n    setPosX(0);\n  }\n};\n\nexport default function Template({ data }) {\n  const [posX, setPosX] = useState(0);\n  const [header, setHeader] = useState([]);\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  useEffect(() => {\n    setHeader(\n      generateTree(\n        JSON.parse(JSON.stringify(frontmatter.header)),\n        setPosX,\n        isTabletOrMobile\n      )\n    );\n  }, [frontmatter.header, isTabletOrMobile]);\n\n  useEffect(() => {\n    if (isTabletOrMobile) {\n      setPosX(0);\n    } else {\n      setPosX(25);\n    }\n  }, [isTabletOrMobile]);\n\n  return (\n    <Layout>\n      <ContentTree\n        header={header}\n        style={{ width: `${posX}%` }}\n        posX={posX}\n        setPosX={setPosX}\n      />\n      <Slider setPosX={setPosX} style={{ left: `${posX}%` }} />\n      <div\n        className=\"content-container\"\n        style={{ width: `calc(${100 - posX}% - 2px)` }}\n      >\n        <FileHeader\n          siteTitle={frontmatter.title}\n          parent={frontmatter.slug.substring(\n            0,\n            frontmatter.slug.lastIndexOf(\"/\")\n          )}\n          onTreeViewClick={(e) =>\n            onTreeViewClick(e, posX, setPosX, isTabletOrMobile)\n          }\n        />\n        <div className=\"content\">\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n          <footer\n            style={{\n              height: \"50px\",\n            }}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        slug\n        title\n        header {\n          depth\n          name\n          link\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}