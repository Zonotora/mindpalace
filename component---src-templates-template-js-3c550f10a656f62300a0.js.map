{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./src/templates/template.js"],"names":["Layout","children","BackButton","parent","style","position","color","to","textDecoration","HomeButton","left","Header","siteTitle","margin","defaultProps","TreeHeader","className","name","height","href","ContentTree","headers","map","header","key","Template","markdownRemark","data","frontmatter","html","JSON","parse","console","log","slug","substring","lastIndexOf","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"oHAAA,6CAoBeA,IAdA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,oCACE,6BACE,8BAAOA,O,4KCNTC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,yBAAKC,MAAO,CAAEC,SAAU,WAAYC,MAAO,UAIzC,kBAAC,IAAD,CACEC,GAAe,KAAXJ,EAAgB,IAAMA,EAC1BC,MAAO,CACLE,MAAM,QACNE,eAAe,SAJnB,UAaAC,EAAa,WACjB,OACE,yBAAKL,MAAO,CAAEC,SAAU,WAAYC,MAAO,QAASI,KAAM,SACxD,kBAAC,IAAD,CACEH,GAAG,IACHH,MAAO,CACLE,MAAM,QACNE,eAAe,SAJnB,UAaAG,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWT,EAAd,EAAcA,OAAd,OACb,gCACE,6BACE,kBAAC,EAAD,CAAYA,OAAQA,IACpB,kBAAC,EAAD,MACA,wBAAIC,MAAO,CAAES,OAAQ,IACnB,kBAAC,IAAD,CACEN,GAAG,IACHH,MAAO,CACLE,MAAM,QACNE,eAAe,SAGhBI,OAWXD,EAAOG,aAAe,CACpBF,UAAU,IAGGD,QC5DTI,G,oBAAa,SAAC,GAAD,QAAGC,iBAAH,MAAe,GAAf,EAAmBC,EAAnB,EAAmBA,KAAnB,IAAyBC,cAAzB,MAAkC,kBAAlC,SACjB,uBAAGC,KAAI,IAAMF,GACX,0BAAMD,UAAS,QAAUA,GACvB,yBAAKA,UAAU,OAAOZ,MAAO,CAAEc,YAC/B,yBAAKF,UAAU,kBACb,mCAEF,yBAAKA,UAAU,UAAf,KACA,2BAAIC,OAKJG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,oCACE,yBAAKL,UAAU,gBACb,wBAAIA,UAAU,cACXK,EAAQC,KAAI,SAACC,GAAD,OACX,wBAAIC,IAAKD,EAAON,MACd,kBAAC,EAAD,CAAYA,KAAMM,EAAON,eAQtB,SAASQ,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACfR,EAAUS,KAAKC,MAAMH,EAAYP,SAGvC,OAFAW,QAAQC,IAAIL,EAAYM,KAAKC,UAAU,EAAGP,EAAYM,KAAKE,YAAY,OAGrE,kBAAC,IAAD,KACE,yBAAKpB,UAAU,IACb,kBAAC,EAAD,CAAaK,QAASA,IACtB,yBAAKL,UAAU,qBACb,kBAAC,EAAD,CACEJ,UAAWgB,EAAYM,KACvB/B,OAAQyB,EAAYM,KAAKC,UACvB,EACAP,EAAYM,KAAKE,YAAY,QAGjC,yBAAKpB,UAAU,UAAUqB,wBAAyB,CAAEC,OAAQT,QAO/D,IAAMU,EAAS,c","file":"component---src-templates-template-js-3c550f10a656f62300a0.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <div>\n        <main>{children}</main>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst BackButton = ({ parent }) => {\n  return (\n    <div style={{ position: \"absolute\", color: \"white\" }}>\n      {/* <svg width=\"200\" height=\"200\">\n        <path d=\"M150 0 L75 200 L225 200 Z\" stoke=\"green\" fill=\"green\" />\n      </svg> */}\n      <Link\n        to={parent === \"\" ? \"/\" : parent}\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        back\n      </Link>\n    </div>\n  );\n};\n\nconst HomeButton = () => {\n  return (\n    <div style={{ position: \"absolute\", color: \"white\", left: \"40px\" }}>\n      <Link\n        to=\"/\"\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        home\n      </Link>\n    </div>\n  );\n};\n\nconst Header = ({ siteTitle, parent }) => (\n  <header>\n    <div>\n      <BackButton parent={parent} />\n      <HomeButton />\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"components/layout\";\nimport Header from \"components/header\";\nimport \"./template.css\";\nimport \"./syntax.css\";\n\nconst TreeHeader = ({ className = \"\", name, height = \"calc(50% + 1px)\" }) => (\n  <a href={`#${name}`}>\n    <span className={`node ${className}`}>\n      <div className=\"test\" style={{ height }} />\n      <div className=\"visibility-box\">\n        <p>1.0</p>\n      </div>\n      <div className=\"status\"> </div>\n      <p>{name}</p>\n    </span>\n  </a>\n);\n\nconst ContentTree = ({ headers }) => (\n  <>\n    <div className=\"content-tree\">\n      <ul className=\"content-ul\">\n        {headers.map((header) => (\n          <li key={header.name}>\n            <TreeHeader name={header.name} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  </>\n);\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  const headers = JSON.parse(frontmatter.headers);\n  console.log(frontmatter.slug.substring(0, frontmatter.slug.lastIndexOf(\"/\")));\n\n  return (\n    <Layout>\n      <div className=\"\">\n        <ContentTree headers={headers} />\n        <div className=\"content-container\">\n          <Header\n            siteTitle={frontmatter.slug}\n            parent={frontmatter.slug.substring(\n              0,\n              frontmatter.slug.lastIndexOf(\"/\")\n            )}\n          />\n          <div className=\"content\" dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        slug\n        title\n        headers\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}