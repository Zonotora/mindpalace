{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./src/templates/template.js"],"names":["Layout","children","TreeViewButton","onTreeviewClick","style","cursor","position","color","onClick","BackButton","parent","left","to","textDecoration","HomeButton","Header","siteTitle","onTreeViewClick","margin","defaultProps","TreeHeader","className","name","link","section","href","trim","length","ContentTree","header","Slider","setPosX","onMouseUp","e","document","removeEventListener","onMouseMove","preventDefault","pageX","window","innerWidth","onMouseDown","button","addEventListener","Template","data","useState","posX","setHeader","markdownRemark","frontmatter","html","useEffect","generateTree","depth","sectionText","elements","text","root","shift","isRoot","unshift","isLast","push","key","JSON","parse","stringify","width","title","slug","substring","lastIndexOf","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"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","file":"component---src-templates-template-js-489865223c11f18a11b0.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <div>\n        <main>{children}</main>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst TreeViewButton = ({ onTreeviewClick }) => {\n  return (\n    <div\n      style={{ cursor: \"pointer\", position: \"absolute\", color: \"white\" }}\n      onClick={onTreeviewClick}\n    >\n      tree\n    </div>\n  );\n};\n\nconst BackButton = ({ parent }) => {\n  return (\n    <div style={{ position: \"absolute\", color: \"white\", left: \"40px\" }}>\n      {/* <svg width=\"200\" height=\"200\">\n        <path d=\"M150 0 L75 200 L225 200 Z\" stoke=\"green\" fill=\"green\" />\n      </svg> */}\n      <Link\n        to={parent === \"\" ? \"/\" : parent}\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        back\n      </Link>\n    </div>\n  );\n};\n\nconst HomeButton = () => {\n  return (\n    <div style={{ position: \"absolute\", color: \"white\", left: \"80px\" }}>\n      <Link\n        to=\"/\"\n        style={{\n          color: `white`,\n          textDecoration: `none`,\n        }}\n      >\n        home\n      </Link>\n    </div>\n  );\n};\n\nconst Header = ({ siteTitle, parent, onTreeViewClick }) => (\n  <header>\n    <div>\n      <TreeViewButton onTreeviewClick={onTreeViewClick} />\n      <BackButton parent={parent} />\n      <HomeButton />\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"components/layout\";\nimport Header from \"components/header\";\nimport \"./template.css\";\nimport \"./syntax.css\";\n\nconst TreeHeader = ({ className = \"\", name, link, section, children = [] }) => (\n  <li>\n    <a href={`#${link}`}>\n      <span className={`node ${className}`.trim()}>\n        <div className=\"node-bar\" />\n        <div className=\"visibility-box\">\n          <p>{section}</p>\n        </div>\n        <div className=\"status\"> </div>\n        <p>{name}</p>\n      </span>\n    </a>\n    {children.length > 0 ? <ul>{children}</ul> : <></>}\n  </li>\n);\n\nconst generateTree = (header, depth = 1, sectionText = \"\") => {\n  const elements = [];\n  const text = depth !== 1 ? `${sectionText}.` : \"\";\n  let section = 1;\n\n  while (header.length > 0) {\n    const root = header.shift();\n    const isRoot = root.depth === 1 ? \"root\" : \"\";\n\n    // check if current node has a depth which is lesser than current recursion\n    // if that is the case return recursion up to current depth\n    if (root.depth < depth) {\n      header.unshift(root);\n      return elements;\n    }\n\n    // if there are no items left check if it is root (depth==1)\n    if (header.length === 0) {\n      const isLast =\n        header.length > 0 && header[0].depth < root.depth ? \"last\" : \"\";\n      elements.push(\n        <TreeHeader\n          key={root.link}\n          className={`${isLast} ${isRoot}`}\n          name={root.name}\n          link={root.link}\n          section={`${text}${section}`}\n        />\n      );\n    }\n    // if next item has a greater depth, generate children nodes\n    else if (header[0].depth > root.depth) {\n      const children = generateTree(\n        header,\n        header[0].depth,\n        `${text}${section}`\n      );\n      const isLast =\n        header.length > 0 && header[0].depth < root.depth ? \"last\" : \"\";\n\n      elements.push(\n        <TreeHeader\n          key={root.link}\n          className={`${isLast} ${isRoot}`}\n          name={root.name}\n          link={root.link}\n          section={`${text}${section}`}\n          children={children}\n        />\n      );\n    }\n    // if next item is equal to current item in depth, add current item (root) to elements\n    else if (header[0].depth === root.depth) {\n      elements.push(\n        <TreeHeader\n          key={root.link}\n          className={isRoot}\n          name={root.name}\n          link={root.link}\n          section={`${text}${section}`}\n        />\n      );\n    }\n    // if next item has a lesser depth, add current item (root) and return elements\n    // because we have reached the end of depth for this node\n    else {\n      elements.push(\n        <TreeHeader\n          key={root.link}\n          className=\"last\"\n          name={root.name}\n          link={root.link}\n          section={`${text}${section}`}\n        />\n      );\n      return elements;\n    }\n    section += 1;\n  }\n  return elements;\n};\n\nconst ContentTree = ({ header, style }) => (\n  <>\n    <div className=\"content-tree\" style={style}>\n      <ul className=\"content-ul\">{header}</ul>\n    </div>\n  </>\n);\n\nconst Slider = ({ setPosX, style }) => {\n  const onMouseUp = (e) => {\n    document.removeEventListener(\"mouseup\", onMouseUp);\n    document.removeEventListener(\"mousemove\", onMouseMove);\n  };\n\n  const onMouseDown = (e) => {\n    if (e.button === 0) {\n      e.preventDefault();\n      document.addEventListener(\"mouseup\", onMouseUp);\n      document.addEventListener(\"mousemove\", onMouseMove);\n    }\n  };\n\n  const onMouseMove = (e) => {\n    e.preventDefault();\n    setPosX((e.pageX / window.innerWidth) * 100);\n  };\n\n  return <div className=\"slider\" onMouseDown={onMouseDown} style={style} />;\n};\n\nconst onTreeViewClick = (e, posX, setPosX) => {\n  if (posX < 5) {\n    setPosX(20);\n  } else {\n    setPosX(0);\n  }\n};\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const [posX, setPosX] = useState(20);\n  const [header, setHeader] = useState([]);\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n\n  useEffect(() => {\n    setHeader(generateTree(JSON.parse(JSON.stringify(frontmatter.header))));\n  }, [frontmatter.header]);\n\n  return (\n    <Layout>\n      <ContentTree header={header} style={{ width: `${posX}%` }} />\n      <Slider setPosX={setPosX} style={{ left: `${posX}%` }} />\n      <div\n        className=\"content-container\"\n        style={{ width: `calc(${100 - posX}% - 2px)` }}\n      >\n        <Header\n          siteTitle={frontmatter.title}\n          parent={frontmatter.slug.substring(\n            0,\n            frontmatter.slug.lastIndexOf(\"/\")\n          )}\n          onTreeViewClick={(e) => onTreeViewClick(e, posX, setPosX)}\n        />\n        <div className=\"content\" dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        slug\n        title\n        header {\n          depth\n          name\n          link\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}