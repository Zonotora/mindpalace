{"componentChunkName":"component---src-templates-template-js","path":"/post1","result":{"data":{"markdownRemark":{"html":"<h1 id=\"header-1\">header 1</h1>\n<p>hello this is some random <span class=\"katex\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>=</mo><msqrt><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">c = \\sqrt{a + b}</annotation></semantics></math></span> text. Even more expressions <span class=\"katex\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∫</mo><mi>a</mi><mi>b</mi></msubsup><msup><mi>x</mi><mn>2</mn></msup><mi>d</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\int_{a}^{b} x^2 dx</annotation></semantics></math></span>.</p>\n<span class=\"katex\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mo>∬</mo><mi>V</mi></msub><mi>μ</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo separator=\"true\">,</mo><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo separator=\"true\">,</mo><mi>w</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>d</mi><mi>t</mi><mtext> </mtext><mi>d</mi><mi>u</mi><mtext> </mtext><mi>d</mi><mi>v</mi><mtext> </mtext><mi>d</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\"> \\iint_V \\mu(t,u,v,w) \\,dt\\,du\\,dv\\,dw</annotation></semantics></math></span>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> test <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"this-is-a-header\">this is a header</h2>\n<p>test</p>\n<h3 id=\"subsub-header\">subsub header</h3>\n<p>this is a subsub</p>\n<h4 id=\"subsubsub-header\">subsubsub header</h4>\n<p>this is cool</p>\n<h4 id=\"another-subsub-header\">another subsub header</h4>\n<p>this is a subsub</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// this is a comment</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// this is a comment</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"Table\">Table</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Rust</th>\n<th>Python</th>\n<th>Typescript</th>\n<th>C#</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>19</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>20</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>21</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"what-is-this\">what is this</h3>\n<p>well it is a header!</p>\n<h1 id=\"h1-header\">h1 header</h1>\n<p>hello</p>","frontmatter":{"date":"2021-01-06","slug":"/post1","title":"This is the title","header":[{"depth":1,"name":"header 1","link":"header-1"},{"depth":2,"name":"this is a header","link":"this-is-a-header"},{"depth":3,"name":"subsub header","link":"subsub-header"},{"depth":4,"name":"subsubsub header","link":"subsubsub-header"},{"depth":4,"name":"another subsub header","link":"another-subsub-header"},{"depth":1,"name":"Table","link":"Table"},{"depth":3,"name":"what is this","link":"what-is-this"},{"depth":1,"name":"h1 header","link":"h1-header"}]}}},"pageContext":{"slug":"/post1"}},"staticQueryHashes":[]}