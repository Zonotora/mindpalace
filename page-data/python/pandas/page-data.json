{"componentChunkName":"component---src-templates-file-js","path":"/python/pandas","result":{"data":{"markdownRemark":{"html":"<h1 id=\"Installation\">Installation</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">pip install pandas</code></pre></div>\n<h1 id=\"Usage\">Usage</h1>\n<p>Pandas uses NumPy for most data types. See <a href=\"https://pandas.pydata.org/docs/reference/index.html\">full documentation</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</code></pre></div>\n<h1 id=\"Input-and-output\">Input and output</h1>\n<p>Read and write files with different formats. See <a href=\"https://pandas.pydata.org/docs/reference/io.html\">documentation</a>.</p>\n<h2 id=\"Read\">Read</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># csv</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># excel</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># custom delimiter</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> delimiter<span class=\"token operator\">=</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"Write\">Write</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># csv</span>\ndf<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'path.csv'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># excel</span>\n<span class=\"token comment\"># one sheet</span>\ndf<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"path.xlsx\"</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet_name_1'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># more than one</span>\ndf2 <span class=\"token operator\">=</span> df1<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">with</span> pd<span class=\"token punctuation\">.</span>ExcelWriter<span class=\"token punctuation\">(</span><span class=\"token string\">'output.xlsx'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> writer<span class=\"token punctuation\">:</span>\n    df1<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet_name_1'</span><span class=\"token punctuation\">)</span>\n    df2<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet_name_2'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"Accessing-rows-and-columns\">Accessing rows and columns</h1>\n<p>Selecting and accessing different data. See <a href=\"https://pandas.pydata.org/docs/user_guide/indexing.html\">user guide</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># get the first 4 rows</span>\ndf<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># get the last 4 rows</span>\ndf<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># get headers</span>\ndf<span class=\"token punctuation\">.</span>columns\n\n<span class=\"token comment\"># read specific column</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># read multiple columns</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># read specific row</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># read multiple rows</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># read specific location (row=2, column=1)</span>\ndf<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># loop through each row</span>\n<span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> row <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>iterrows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># filter</span>\n<span class=\"token comment\"># will give every row with the type value fire</span>\ndf<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h1 id=\"Sorting-and-describing-data\">Sorting and describing data</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># will give count, mean, standard deviation, min, max, 25%, 50%, 75%</span>\ndf<span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># sort by column</span>\ndf<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># will sort first by name then by type</span>\ndf<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># will sort first by name then by type</span>\n<span class=\"token comment\"># the first with ascending=True and the last with ascending=False</span>\ndf<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"Manipulate-data\">Manipulate data</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># create a new column with the values from column 'name' and 'type'</span>\n<span class=\"token comment\"># it makes sense if 'name' and 'type' are numbers</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># or</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># remove column</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"Plotting\">Plotting</h1>","frontmatter":{"date":"2021-02-22","slug":"/python/pandas","title":"Pandas","header":[{"depth":1,"name":"Installation","link":"Installation"},{"depth":1,"name":"Usage","link":"Usage"},{"depth":1,"name":"Input and output","link":"Input-and-output"},{"depth":2,"name":"Read","link":"Read"},{"depth":2,"name":"Write","link":"Write"},{"depth":1,"name":"Accessing rows and columns","link":"Accessing-rows-and-columns"},{"depth":1,"name":"Sorting and describing data","link":"Sorting-and-describing-data"},{"depth":1,"name":"Manipulate data","link":"Manipulate-data"},{"depth":1,"name":"Plotting","link":"Plotting"}]}}},"pageContext":{"slug":"/python/pandas"}},"staticQueryHashes":[]}